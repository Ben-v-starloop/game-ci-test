name: Actions ðŸ˜Ž

on:
  pull_request: {}
  push: { branches: [master] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}


jobs:
  testRunner:
    name: Test all modes âœ¨
    runs-on: ubuntu-latest
    steps:
      # Checkout repository (required to test local actions)
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-test-project
          restore-keys: |
            Library-test-project-
            Library-
      # Configure test runner
      - uses: webbertakken/unity-test-runner@v2
        id: testRunner
        with:

          testMode: all

      # Upload artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildWebGL:
    needs: testRunner
    name: Build for WebGL
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-buildWebGL
          restore-keys: |
            Library-buildWebGL-
            Library-
      - uses: webbertakken/unity-builder@v2
        with:
          targetPlatform: WebGL
      - uses: actions/upload-artifact@v2
        with:
          name: build-WebGL
          path: build/WebGL


  deployPages:
    needs: buildWebGL
    name: Deploy to Github Pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build-WebGL
          path: build/WebGL
      - name: Display structure of root files
        run: ls -R
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: build/WebGL
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: build/WebGL

#  buildAllPlatforms:
#    needs: testRunner
#    name: Build for ${{ matrix.targetPlatform }}
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        targetPlatform:
#          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
#          - StandaloneWindows64 # Build a Windows 64-bit standalone.
#          - StandaloneLinux64 # Build a Linux 64-bit standalone.
#          - WebGL # WebGL.
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Create LFS file list
#        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
#
#      - name: Restore LFS cache
#        uses: actions/cache@v2
#        id: lfs-cache
#        with:
#          path: .git/lfs
#          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
#
#      - name: Git LFS Pull
#        run: |
#          git lfs pull
#          git add .
#          git reset --hard
#      - name: Restore Library cache
#        uses: actions/cache@v2
#        with:
#          path: Library
#          key: Library-buildAndTest-${{ matrix.targetPlatform }}
#          restore-keys: |
#            Library-buildAndTest-
#            Library-
#      - uses: webbertakken/unity-test-runner@v2
#        id: testRunner
#        with:
#          githubToken: ${{ secrets._GITHUB_TOKEN }}
#      - uses: actions/upload-artifact@v2
#        with:
#          name: Test results (all modes)
#          path: ${{ steps.testRunner.outputs.artifactsPath }}
#      - uses: webbertakken/unity-builder@v2
#        with:
#          targetPlatform: ${{ matrix.targetPlatform }}
#      - uses: actions/upload-artifact@v2
#        with:
#          name: Build (${{ matrix.targetPlatform }})
#          path: build/${{ matrix.targetPlatform }}
